name: Build and Release WaveTerminal with Task

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Package for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 按 WaveTerminal 要求调整

      # 3. 设置 Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # 按 WaveTerminal 要求调整

      # 4. 安装 Rust（如果需要）
      - name: Setup Rust
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # 5. 安装 Linux 依赖
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      # 6. 安装 Task
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: '3.x'

      # 7. 运行 Task 打包
      - name: Package with Task
        run: |
          task package-${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'macos' || 'linux' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8. 上传构建产物到 Release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.exe
            dist/*.AppImage
            dist/*.dmg
            dist/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
